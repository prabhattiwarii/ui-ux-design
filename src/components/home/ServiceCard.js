import React, { useEffect, useState } from "react";
import styled from "styled-components";
import colors from "../../constants/Colors";
import c from "../../constants/Constant";
import arrow from "../../assets/images/arrow.svg";
import { Splide, SplideSlide } from "@splidejs/react-splide";
import "@splidejs/splide/dist/css/splide.min.css";
import axios from "axios";

const Wrap = styled.div`
    width:100%;max-width: ${c.width};margin: 0 auto;box-sizing:border-box;padding:40px 20px;display: flex;flex-direction: column;row-gap: 30px;
    & .content-section {
        display: flex;align-items: center;justify-content: space-between;column-gap:20px;
            & .left {
                flex:1 1 0%;
                & .heading {
                    font-size: 32px;line-height:42px;font-weight: 600;color: ${colors.black};margin:0 0 10px;
                }
                & .desc {
                    color: ${colors.lightBlack};max-width:1000px;
                    & p{
                        margin:0;
                    }
                }
            };
        & .right {
            text-transform: uppercase;display: flex;align-items: center;
            & .link-2 {
                background: ${colors.black};color: ${colors.white};padding: 10px 20px;border-radius: 8px;font-weight: 500;font-size: 12px;gap:6px;display:flex;align-items:center;box-shadow:5px 10px 15px #2E2E2E33;
                & .arrow {
                    width: 14px;height:10px;
                }
            }
        };
    }

    & .service-section {
        overflow:hidden;
        & .service-card{
            color: ${colors.lightDark};text-decoration: none;display: flex;flex-direction: column;padding: 30px 20px;margin: 15px;border-radius: 26px;overflow: hidden;box-shadow: 0px 3px 20px #00000029;transition: all 0.2s ease 0s;height: calc(100% - 30px);
            & .icon{
                align-self: center; cursor: pointer;margin: 0px 0px 10px;
                & .svg {
                    width: 80px;height:80px;fill:${colors.orange};
                }
            }
            & .title {
                font-size: 18px;color:${colors.lightDark};font-weight: 600;align-self: center;cursor: pointer;margin: 0px 0px 20px;text-align:center;
            }
            & .text {
                font-size: 14px;line-height: 22px;text-align:center;margin:0 0 10px;
            }
            & .read-more {
                color: ${colors.orange};font-size: 14px;cursor: pointer;text-align:center;
            }
            &:hover{
                background:${colors.orange};
                & .icon{
                    & .svg{
                        fill:${colors.white};
                    }
                }
                & .title{
                    color:${colors.white};
                }
                & .text{
                    color:${colors.white}
                }
                & .read-more{
                    color:${colors.white}
                }
            }
        }

        & .splide{
            
            & .splide__arrow--prev{
                left:1px;
            }
            & .splide__arrow--next{
                right: 1px;
            }
        }
    }

    @media (max-width:991px){
        & .content-section {
            & .left {
                & .heading {
                    font-size: 30px;line-height:40px;
                }
            };
        }
    };

    @media (max-width:767px){
        & .content-section {
            flex-direction:column;row-gap:15px;align-items: flex-start;
            & .left {
                & .heading {
                    font-size: 24px;line-height:34px;
                }
                & .desc {
                    font-size:14px;
                }
            };
        }
    }

    @media (max-width:479px){
        & .content-section {
            & .left {
                & .heading {
                    font-size: 18px;line-height:28px;
                }
            };
        }
    };

`;


const ServiceCard = () => {

    const [ service, setService] = useState({});

    useEffect(()=>{
        getService();
    },[])

    const getService =()=>{
        return axios.get(c.BASE_URL)
        .then((res)=>{
            if(res.status === 200){
                const serviceData = res.data.services;
                setService(serviceData);
                console.log(serviceData);
            }else{
                console.error('Error:', res.statusText);
            }
        })
        .catch((error) => {
            console.error('Network Error:', error);
        });
        
    };
    const serviceLogo = (icon) => {
        switch (icon) {
            case "web-development":
              return (
                <svg viewBox="0 0 100.949 82.919" width="80" height="80" fill={colors.orange} className="svg"><g transform="translate(0 -45.723)"><path d="M169.031,142.822a1.479,1.479,0,0,0,1.479-1.479v-3.067a1.479,1.479,0,1,0-2.957,0v3.067A1.479,1.479,0,0,0,169.031,142.822Z" transform="translate(-134.516 -73.118)"></path><path d="M330.927,142.822a1.479,1.479,0,0,0,1.479-1.479v-3.067a1.479,1.479,0,0,0-2.958,0v3.067A1.479,1.479,0,0,0,330.927,142.822Z" transform="translate(-264.492 -73.118)"></path><path d="M232.844,156.764a7.059,7.059,0,0,0,5.323-2.424,1.479,1.479,0,1,0-2.23-1.943,4.1,4.1,0,0,1-6.186,0,1.479,1.479,0,1,0-2.23,1.943A7.06,7.06,0,0,0,232.844,156.764Z" transform="translate(-182.37 -85.234)"></path><circle cx="1.649" cy="1.649" r="1.649" transform="translate(48.826 50.724)"></circle><path d="M237.253,197.869a1.479,1.479,0,0,0-1.921.827l-8.64,21.723a1.479,1.479,0,0,0,2.748,1.093l8.64-21.723A1.478,1.478,0,0,0,237.253,197.869Z" transform="translate(-181.912 -122.064)"></path><path d="M314.25,203.763a1.479,1.479,0,1,0-2.533,1.527l5.351,8.875-5.364,9.26a1.479,1.479,0,1,0,2.559,1.482l5.8-10.016a1.478,1.478,0,0,0-.013-1.5Z" transform="translate(-250.085 -126.305)"></path><path d="M159.257,214.165l5.351-8.875a1.479,1.479,0,0,0-2.533-1.527l-5.8,9.624a1.478,1.478,0,0,0-.013,1.5l5.8,10.016a1.479,1.479,0,1,0,2.559-1.482Z" transform="translate(-125.291 -126.306)"></path><path d="M43.161,90.765a1.479,1.479,0,0,0,1.479-1.479v-35.5a5.108,5.108,0,0,1,5.1-5.1h68.394a5.108,5.108,0,0,1,5.1,5.1V69.853a1.479,1.479,0,0,0,2.958,0V53.783a8.069,8.069,0,0,0-8.06-8.06H49.742a8.069,8.069,0,0,0-8.06,8.06v35.5A1.478,1.478,0,0,0,43.161,90.765Z" transform="translate(-33.464 0)"></path><path d="M94.7,148.021H92.731V117.877a1.479,1.479,0,1,0-2.957,0v30.144H82.2V104.466a6.3,6.3,0,0,0-6.293-6.293H25.037a6.3,6.3,0,0,0-6.293,6.293v43.555H11.176V137.31a1.479,1.479,0,0,0-2.957,0v10.711H6.25A6.257,6.257,0,0,0,0,154.271v5.269a11.223,11.223,0,0,0,11.211,11.211H89.738a11.223,11.223,0,0,0,11.211-11.211v-5.269a6.257,6.257,0,0,0-6.25-6.25Zm-56.52,2.957H62.77V154.1a3.807,3.807,0,0,1-3.8,3.8H41.98a3.807,3.807,0,0,1-3.8-3.8v-3.126ZM21.7,104.466a3.339,3.339,0,0,1,3.335-3.335H75.912a3.339,3.339,0,0,1,3.335,3.335v43.555H21.7Zm76.29,55.074a8.263,8.263,0,0,1-8.253,8.253H11.211a8.263,8.263,0,0,1-8.253-8.253v-5.269a3.3,3.3,0,0,1,3.292-3.293H35.221V154.1a6.768,6.768,0,0,0,6.759,6.761H58.968a6.768,6.768,0,0,0,6.759-6.761v-3.126H94.7a3.3,3.3,0,0,1,3.293,3.293Z" transform="translate(0 -42.109)"></path></g></svg>
              );
            case "e-commerce":
              return (
                <svg viewBox="0 0 99.857 84.432" width="80" height="80" fill={colors.orange} className="svg"><g transform="translate(-10 -48)"><path d="M336.218,191.1h17.049a1.218,1.218,0,0,0,1.218-1.218v-4.668A1.218,1.218,0,0,0,353.267,184H336.218A1.218,1.218,0,0,0,335,185.218v4.668A1.218,1.218,0,0,0,336.218,191.1Zm7.1-4.668h8.727v2.233h-8.727Zm-5.886,0h3.45v2.233h-3.45Z" transform="translate(-259.038 -108.397)"></path><path d="M336.218,241.1h23.138a1.218,1.218,0,0,0,1.218-1.218v-4.668A1.218,1.218,0,0,0,359.355,234H336.218A1.218,1.218,0,0,0,335,235.218v4.668A1.218,1.218,0,0,0,336.218,241.1Zm7.1-4.668h14.816v2.233H343.321Zm-5.886,0h3.45v2.233h-3.45Z" transform="translate(-259.038 -148.249)"></path><path d="M336.218,291.1h17.049a1.218,1.218,0,0,0,1.218-1.218v-4.668A1.218,1.218,0,0,0,353.267,284H336.218A1.218,1.218,0,0,0,335,285.218v4.668A1.218,1.218,0,0,0,336.218,291.1Zm7.1-4.668h8.727v2.233h-8.727Zm-5.886,0h3.45v2.233h-3.45Z" transform="translate(-259.038 -188.101)"></path><path d="M336.218,341.1h21.108a1.218,1.218,0,0,0,1.218-1.218v-4.668A1.218,1.218,0,0,0,357.326,334H336.218A1.218,1.218,0,0,0,335,335.218v4.668A1.218,1.218,0,0,0,336.218,341.1Zm7.1-4.668h12.787v2.233H343.321Zm-5.886,0h3.45v2.233h-3.45Z" transform="translate(-259.038 -227.953)"></path><path d="M84.651,208.32h37.981a1.147,1.147,0,0,0,1.213-1.251l-2.984-35.325a1.212,1.212,0,0,0-1.179-1.115l-8.734-.059V167.6a8.568,8.568,0,0,0-8.568-8.6h0a8.683,8.683,0,0,0-8.679,8.609v2.959H87.634a1.2,1.2,0,0,0-1.214,1.1L83.438,207.1a1.106,1.106,0,0,0,.317.875A1.173,1.173,0,0,0,84.651,208.32Zm34.01-34.66,2.6,30.794-2.6-2.1Zm.525,32.224h-3.639l1.888-1.415Zm-2.961-3.4-2.769,2.076,2.769-28.2ZM96.132,167.609a6.246,6.246,0,0,1,6.251-6.174h0a6.133,6.133,0,0,1,6.127,6.174v2.959H96.132ZM88.754,173H93.7v3.906a1.218,1.218,0,1,0,2.436,0V173h12.381v3.906a1.218,1.218,0,1,0,2.436,0V173h3.083l-2.46,24.964H86.645ZM86.44,200.4h24.892l-.542,5.48H85.976Z" transform="translate(-58.529 -88.471)"></path><path d="M100.521,48H19.336A9.336,9.336,0,0,0,10,57.336V123.1a9.336,9.336,0,0,0,9.336,9.336h81.185a9.336,9.336,0,0,0,9.336-9.336V57.336A9.336,9.336,0,0,0,100.521,48ZM12.436,57.373a6.941,6.941,0,0,1,6.9-6.938H42.068v6.671A4.266,4.266,0,0,1,37.787,61.4H12.436Zm94.986,65.686a6.941,6.941,0,0,1-6.9,6.938H19.336a6.941,6.941,0,0,1-6.9-6.938V63.831h94.986Zm0-61.663H42.979A6.6,6.6,0,0,0,44.5,57.106V50.436h56.017a6.941,6.941,0,0,1,6.9,6.938Z" transform="translate(0 0)"></path><path d="M55.843,78.979A1.661,1.661,0,1,0,57.5,80.64,1.661,1.661,0,0,0,55.843,78.979Z" transform="translate(-35.215 -24.691)"></path><path d="M88.57,78.979A1.661,1.661,0,1,0,90.23,80.64a1.661,1.661,0,0,0-1.661-1.661Z" transform="translate(-61.299 -24.691)"></path><path d="M121.3,78.979a1.661,1.661,0,1,0,1.66,1.661A1.661,1.661,0,0,0,121.3,78.979Z" transform="translate(-87.384 -24.691)"></path><path d="M39.218,145.845a1.218,1.218,0,0,0,1.218-1.218v-.872a1.218,1.218,0,0,0-2.436,0v.872A1.218,1.218,0,0,0,39.218,145.845Z" transform="translate(-22.317 -75.35)"></path><path d="M39.218,189.753a1.218,1.218,0,0,0,1.218-1.218V169.051a1.218,1.218,0,1,0-2.436,0v19.484A1.218,1.218,0,0,0,39.218,189.753Z" transform="translate(-22.317 -95.511)"></path></g></svg>
              );
            case "mobile-app":
              return (
                <svg viewBox="0 0 95.394 100.386" width="80" height="80"  fill={colors.orange} className="svg"><g transform="translate(-12.731)"><g transform="translate(12.731 0)"><path d="M208.072,440.568h7.092a1.47,1.47,0,1,0,0-2.941h-7.092a1.47,1.47,0,0,0,0,2.941Z" transform="translate(-168.591 -351.823)"></path><path d="M197.952,63.387h11.061a1.47,1.47,0,1,0,0-2.941H197.952a1.47,1.47,0,0,0,0,2.941Z" transform="translate(-160.454 -48.595)"></path><circle cx="1.47" cy="1.47" r="1.47" transform="translate(31.401 11.7)"></circle><circle cx="1.47" cy="1.47" r="1.47" transform="translate(51.715 11.7)"></circle><circle cx="1.47" cy="1.47" r="1.47" transform="translate(41.558 71.858)"></circle><circle cx="1.47" cy="1.47" r="1.47" transform="translate(32.055 71.858)"></circle><circle cx="1.47" cy="1.47" r="1.47" transform="translate(50.485 71.858)"></circle><path d="M371.55,84.2h4.457a1.47,1.47,0,0,0,0-2.941h-2.986V76.682a1.47,1.47,0,1,0-2.941,0v6.049A1.47,1.47,0,0,0,371.55,84.2Z" transform="translate(-300.016 -60.465)"></path><path d="M174.112,158.831h-9.055a10.916,10.916,0,0,0-10.74,11.059,11.118,11.118,0,0,0,6.255,10.049.773.773,0,0,1,.428.7v3.42a2.144,2.144,0,0,0,1.249,1.951,2.08,2.08,0,0,0,2.252-.332l5.233-4.567a.645.645,0,0,1,.423-.163h3.955a11.064,11.064,0,0,0,0-22.119Zm0,19.178h-3.955a3.585,3.585,0,0,0-2.357.888l-3.859,3.368v-1.625a3.726,3.726,0,0,0-2.11-3.36,8.164,8.164,0,0,1-4.573-7.391,7.973,7.973,0,0,1,7.8-8.119h9.055a8.125,8.125,0,0,1,0,16.237Z" transform="translate(-126.557 -127.69)"></path><path d="M213.793,192.952h-7.977a1.47,1.47,0,0,0,0,2.941h7.977a1.47,1.47,0,1,0,0-2.941Z" transform="translate(-166.777 -155.121)"></path><path d="M211.53,222.013h-5.713a1.471,1.471,0,0,0,0,2.941h5.713a1.471,1.471,0,0,0,0-2.941Z" transform="translate(-166.777 -178.484)"></path><path d="M403.494,201.209a11.694,11.694,0,0,0-10.26-9.967,12.259,12.259,0,0,0-1.3-.07h0a11.621,11.621,0,0,0-8.245,3.395,11.548,11.548,0,0,0-1.875,13.974l7.831,13.5a2.65,2.65,0,0,0,4.58,0l7.831-13.5A11.512,11.512,0,0,0,403.494,201.209Zm-3.986,5.857-7.576,13.056-7.576-13.056a8.608,8.608,0,0,1,1.4-10.414,8.7,8.7,0,0,1,6.173-2.54,9.29,9.29,0,0,1,.987.053,8.723,8.723,0,0,1,7.659,7.429,8.6,8.6,0,0,1-1.071,5.472Z" transform="translate(-308.205 -153.689)"></path><path d="M419.276,223.236a5,5,0,1,0,5,5A5,5,0,0,0,419.276,223.236Zm0,7.054a2.057,2.057,0,1,1,2.057-2.057A2.059,2.059,0,0,1,419.276,230.29Z" transform="translate(-335.548 -179.467)"></path><path d="M351.334,409.388a2.059,2.059,0,0,0-3.114,1.768v9.558a2.06,2.06,0,0,0,3.114,1.768l8-4.779a2.059,2.059,0,0,0,0-3.535Zm-.173,9.771v-6.449l5.4,3.224Z" transform="translate(-282.442 -328.888)"></path><path d="M48.345,47.539c1.081-1.1,3.919-4.028,6.022-6.2a5.776,5.776,0,0,0,0-7.963,5.432,5.432,0,0,0-7.526-.3,5.432,5.432,0,0,0-7.526.3,5.776,5.776,0,0,0,0,7.964c2.1,2.168,4.939,5.093,6.022,6.2a2.1,2.1,0,0,0,3.007,0ZM41.429,39.3a2.81,2.81,0,0,1,0-3.875,2.493,2.493,0,0,1,3.608,0l.747.772a1.47,1.47,0,0,0,2.115,0l.747-.772a2.493,2.493,0,0,1,3.608,0,2.81,2.81,0,0,1,0,3.874c-1.784,1.84-4.1,4.225-5.413,5.575C45.524,43.519,43.211,41.135,41.429,39.3Z" transform="translate(-32.823 -25.491)"></path><path d="M94.461,73.709H81.553V34.348a12.385,12.385,0,1,0,0-24.165V8.822A4.324,4.324,0,0,0,77.234,4.5H40.766V2.451A2.453,2.453,0,0,0,38.315,0H15.182a2.453,2.453,0,0,0-2.451,2.451v24A2.453,2.453,0,0,0,15.182,28.9h5.113a1.47,1.47,0,1,0,0-2.941H15.672V2.941H37.825V25.958H27.288a1.47,1.47,0,0,0,0,2.941h2.677v42H17.827a2.453,2.453,0,0,0-2.451,2.451V88.335a2.453,2.453,0,0,0,2.451,2.451H29.965v2.388a4.324,4.324,0,0,0,4.319,4.319H71.025v.442a2.453,2.453,0,0,0,2.451,2.451H94.461a2.453,2.453,0,0,0,2.451-2.451v-5.98a1.47,1.47,0,0,0-2.941,0v5.49H73.966V76.65H93.971v8.312a1.47,1.47,0,1,0,2.941,0v-8.8A2.454,2.454,0,0,0,94.461,73.709ZM93.71,22.266a9.444,9.444,0,1,1-9.444-9.444A9.455,9.455,0,0,1,93.71,22.266ZM77.234,7.444a1.38,1.38,0,0,1,1.378,1.378v2.43a12.429,12.429,0,0,0-6.4,8.155H40.766V7.444ZM35.523,73.837l-7.4,6.56-7.4-6.56ZM18.317,87.845V75.635L26.509,82.9a2.433,2.433,0,0,0,3.227,0l8.193-7.262v12.21Zm52.708,6.707H34.284a1.38,1.38,0,0,1-1.378-1.378V90.786h5.512a2.453,2.453,0,0,0,2.451-2.451V81.617H71.025Zm2.731-26h4.857v5.161H73.476a2.453,2.453,0,0,0-2.451,2.451v2.516H40.869V73.347A2.453,2.453,0,0,0,38.419,70.9H32.906V68.547H66.828a1.47,1.47,0,0,0,0-2.941H32.906V28.9h5.409a2.453,2.453,0,0,0,2.451-2.451v-4.1H71.883a12.4,12.4,0,0,0,6.73,10.932V65.607H73.756a1.47,1.47,0,1,0,0,2.941Z" transform="translate(-12.731 0)"></path></g></g></svg>
              );
              case "design":
              return (
                <svg viewBox="0 0 100 77.05" width="80" height="80" fill={colors.orange} className="svg"><path d="M100,77.626a9.359,9.359,0,0,0-15.716-6.87,5.242,5.242,0,0,0-7.152,7.139L62.476,92.55V70.63h9.382a1.465,1.465,0,0,0,0-2.93H62.476V60.216a1.465,1.465,0,1,0-2.93,0V67.7H24.808a1.465,1.465,0,1,0,0,2.93H31.2L13.827,80.651l-.051.032V70.63h5.173a1.465,1.465,0,0,0,0-2.93H13.776V60.216a1.465,1.465,0,0,0-2.93,0V67.7H1.465a1.465,1.465,0,1,0,0,2.93h9.381v53.293H1.465a1.465,1.465,0,1,0,0,2.93h9.381v7.484a1.465,1.465,0,0,0,2.93,0v-7.484h36.39a1.465,1.465,0,1,0,0-2.93H42.123l6.178-3.564a3.427,3.427,0,0,0,2.232.832,3.5,3.5,0,0,0,1.176-.205l7.837-2.793v5.73H56.025a1.465,1.465,0,0,0,0,2.93h3.522v7.484a1.465,1.465,0,0,0,2.93,0v-7.484h9.382a1.465,1.465,0,0,0,0-2.93H62.476v-6.774l2.606-.929h0a1.477,1.477,0,0,0,.139-.058l.032-.017q.05-.025.1-.054l.041-.026c.03-.02.058-.04.087-.062l.034-.026c.038-.031.074-.063.109-.1l0,0L90.37,91.132a5.242,5.242,0,0,0,7.139-7.153A9.287,9.287,0,0,0,100,77.626Zm-4.814-4.548a6.428,6.428,0,0,1,.374,8.686L86.5,72.7a6.441,6.441,0,0,1,8.685.373ZM56.253,116.256l-4.244-4.244,2.5-7.012a3.357,3.357,0,0,1,2.676.5c.559.559.692,1.77.382,3.5,0,.008,0,.016,0,.025-.007.043-.012.086-.015.13,0,.017,0,.035,0,.052,0,.038,0,.076,0,.114a1.464,1.464,0,0,0,1.719,1.379c1.731-.309,2.942-.177,3.5.383a3.356,3.356,0,0,1,.5,2.675Zm8.584-7.246a4.643,4.643,0,0,0-2.291-1.22L75.611,94.726a1.465,1.465,0,0,0-2.072-2.072L60.475,105.718a4.442,4.442,0,0,0-3.513-3.509L79.068,80.1l3.511,3.511-4.258,4.258a1.465,1.465,0,0,0,2.072,2.072l4.258-4.258L88.163,89.2,66.056,111.3a4.641,4.641,0,0,0-1.218-2.293ZM59.547,70.63V80.693l-.04-.025L42.135,70.63ZM13.781,85.8a3.031,3.031,0,0,1,1.511-2.61L35.166,71.725a3.019,3.019,0,0,1,3.012,0L58.04,83.2a3.025,3.025,0,0,1,1.507,2.611V95.48l-6.459,6.459V91.23a5.958,5.958,0,0,0-2.967-5.148L39.64,80.025a5.959,5.959,0,0,0-5.943,0L23.211,86.072a5.961,5.961,0,0,0-2.976,5.146v12.105A5.958,5.958,0,0,0,23.2,108.47l10.482,6.057a5.958,5.958,0,0,0,5.943,0l10.486-6.049.057-.035-2.889,8.11a3.5,3.5,0,0,0-.2,1.127l-8.918,5.145a3.024,3.024,0,0,1-3.014,0L15.282,111.348a3.018,3.018,0,0,1-1.5-2.611Zm36.377,5.431v12.105a3.022,3.022,0,0,1-1.51,2.608l-10.486,6.049a3.021,3.021,0,0,1-3.013,0l-10.482-6.057a3.02,3.02,0,0,1-1.5-2.61V91.218a3.022,3.022,0,0,1,1.51-2.608L35.161,82.56a3.021,3.021,0,0,1,3.013,0l10.482,6.057a3.022,3.022,0,0,1,1.5,2.611ZM13.776,123.923V113.86l.04.025,17.371,10.038H13.776Zm36.95-5.7a.537.537,0,0,1-.687-.687l.881-2.472,2.278,2.278Zm43.861-30.02a2.316,2.316,0,0,1-3.271,0l-.045-.045L80.1,76.995l-.045-.045a2.313,2.313,0,0,1,3.271-3.271L94.587,84.934a2.316,2.316,0,0,1,0,3.271Z" transform="translate(0 -58.751)"></path></svg>
              );
              case "marketing":
              return (
                <svg viewBox="0 0 100.944 87.668" width="80" height="80" fill={colors.orange} className="svg"><g transform="translate(0 -33.667)"><path d="M52.714,71.681a1.479,1.479,0,0,0,0,2.957h2.031a1.479,1.479,0,0,0,0-2.957Z" transform="translate(-41.134 -30.519)"></path><path d="M103.629,71.681a1.479,1.479,0,0,0,0,2.957h2.032a1.479,1.479,0,0,0,0-2.957Z" transform="translate(-82.011 -30.519)"></path><path d="M156.576,74.638a1.479,1.479,0,1,0,0-2.957h-2.032a1.479,1.479,0,1,0,0,2.957Z" transform="translate(-122.888 -30.519)"></path><path d="M168.834,181.566a1.479,1.479,0,0,0,2.091-2.091l-27.215-27.22a1.479,1.479,0,1,0-2.091,2.091l.474.474-3.288,7.971a1.478,1.478,0,0,0-1.941,2.22l.726.726-2.562,6.21-11.1,11.1a4.2,4.2,0,0,0,0,5.927l.2.2-1.045,1.045,0,0a1.479,1.479,0,1,0-2.091,2.091l.1.1a6.986,6.986,0,0,0,9.689,9.691l.1.1a1.479,1.479,0,0,0,2.091-2.091l0,0L134,199.052l.2.2a4.2,4.2,0,0,0,5.926,0l.2-.2,3.911,3.911a1.479,1.479,0,1,0,2.091-2.091l-3.911-3.911,4.683-4.682,3.059,3.06a.084.084,0,0,1,.02.087l-.762,2.106a3.052,3.052,0,0,0,.709,3.185L154.418,205a.974.974,0,0,1,0,1.376l-.6.6a.974.974,0,0,1-1.376,0l-1.924-1.924a1.479,1.479,0,0,0-2.091,2.091l1.924,1.924a3.935,3.935,0,0,0,5.558,0l.6-.6a3.935,3.935,0,0,0,0-5.558l-4.283-4.284a.083.083,0,0,1-.02-.087l.762-2.106a3.053,3.053,0,0,0-.709-3.185l-3.059-3.06,2.031-2.031,6.21-2.56.726.726a1.478,1.478,0,0,0,2.22-1.941l7.971-3.286Zm-34.873-.34h0l-2.584,2.584a.948.948,0,0,1-1.341,0l-1.344-1.344,3.925-3.925,1.344,1.345a.947.947,0,0,1,0,1.341Zm-9.922,17.912a4.018,4.018,0,0,1-.79-4.569l5.358,5.359A4.031,4.031,0,0,1,124.04,199.137Zm7.874-2.177-1.045,1.045-5.7-5.7,1.045-1.045Zm4.382.2-10.277-10.279a1.235,1.235,0,0,1,0-1.744l.582-.582,1.344,1.344a3.9,3.9,0,0,0,5.524,0l2.584-2.584a3.9,3.9,0,0,0,0-5.523l-1.344-1.344,1.575-1.574L148.3,186.9l-9.012,9.011,0,0,0,0-1.248,1.248A1.235,1.235,0,0,1,136.3,197.161Zm14.448-12.005-12.717-12.719L139.855,168l15.322,15.325Zm7.395-3.049-17.062-17.065,3.282-7.956L166.1,178.826Z" transform="translate(-96.267 -94.86)"></path><path d="M326.4,176.017l-3.962,3.962a1.479,1.479,0,0,0,2.091,2.091l3.962-3.962a1.479,1.479,0,0,0-2.091-2.091Z" transform="translate(-258.52 -113.937)"></path><path d="M285.673,147.107v-5.6a1.479,1.479,0,1,0-2.957,0v5.6a1.479,1.479,0,0,0,2.957,0Z" transform="translate(-226.977 -85.39)"></path><path d="M348.694,236.672a1.478,1.478,0,0,0,1.479,1.479h5.6a1.479,1.479,0,1,0,0-2.957h-5.6A1.479,1.479,0,0,0,348.694,236.672Z" transform="translate(-279.947 -161.794)"></path><path d="M58.751,169.923a1.478,1.478,0,0,0-1.479-1.479H44.623a1.479,1.479,0,0,0,0,2.957H57.272A1.479,1.479,0,0,0,58.751,169.923Z" transform="translate(-34.638 -108.205)"></path><path d="M44.623,205.918a1.479,1.479,0,0,0,0,2.957h8.706a1.479,1.479,0,0,0,0-2.957Z" transform="translate(-34.638 -138.291)"></path><path d="M364.566,365.523H343.58a1.479,1.479,0,1,0,0,2.957h20.987a1.479,1.479,0,1,0,0-2.957Z" transform="translate(-274.654 -266.429)"></path><path d="M396.68,398.567h-13.1a1.479,1.479,0,0,0,0,2.957h13.1a1.479,1.479,0,1,0,0-2.957Z" transform="translate(-306.768 -292.958)"></path><path d="M90.82,33.667H31.678a1.479,1.479,0,1,0,0,2.957H90.82a7.174,7.174,0,0,1,7.166,7.166v4.866H2.957V43.791a7.174,7.174,0,0,1,7.166-7.166H25.765a1.479,1.479,0,1,0,0-2.957H10.124A10.135,10.135,0,0,0,0,43.791v67.421a10.135,10.135,0,0,0,10.124,10.124h80.7a10.135,10.135,0,0,0,10.124-10.124v-3.665a1.479,1.479,0,0,0-2.957,0v3.665a7.174,7.174,0,0,1-7.166,7.166h-80.7a7.175,7.175,0,0,1-7.166-7.166v-59.6H97.986v50.021a1.479,1.479,0,1,0,2.957,0V43.791A10.135,10.135,0,0,0,90.82,33.667Z" transform="translate(0)"></path></g></svg>
              );
            default:
              return null;
          }
    }
    const option = {
        type: "loop",
        perPage: 4,
        autoplay: "true" ,
        interval: 6000,
        pagination:false, 
        arrows:true, 
        loop :true,
        breakpoints: {
            1200: {perPage: 3},
            867: {perPage: 2},
            600: {perPage: 1},
        },
    }
    return (
        <Wrap>
            <div className="content-section">
                <div className="left">
                    <div className="heading">{service.heading}</div>
                    <div className="desc" dangerouslySetInnerHTML={{__html:service.description}}/>
                </div>
                <div className="right">
                    <a className="link-2" href="/">
                        {service.buttonText}
                        <span>
                            <img className="arrow" src={arrow} alt="" />
                        </span>
                    </a>
                </div>
            </div>
            <div className="service-section">
                <Splide options={option} className="splide">
                    {Array.isArray(service.data)&& service.data.map((services) => (
                        <SplideSlide key={services.id}>
                            <div className="service-card">
                                <div className="icon">{serviceLogo(services.icon)}</div>
                                <div className="title">{services.name}</div>
                                <div className="text">{services.description}</div>
                                <span className="read-more">Read More...</span>
                            </div>
                        </SplideSlide>
                    ))}
                </Splide>
            </div>
        </Wrap>
    );
};

export default ServiceCard;
